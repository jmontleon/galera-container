- name: Database init
  connection: local
  gather_facts: no
  hosts: localhost
  tasks: 
    - name: Create a random password
      command: pwgen -c -n -B 10 1
      register: randompw 
    
    - name: Get environment vars
      set_fact: 
        mariadb_database: "{{ lookup('env', 'MARIADB_DATABASE') | default('mysql', true) }}"
        mariadb_username: "{{ lookup('env', 'MARIADB_USERNAME') | default('admin', true) }}"
        mariadb_password: "{{ lookup('env', 'MARIADB_PASSWORD') | default('admin', true) }}"
        bootstrap_args: "{{ lookup('env', 'BOOTSTRAP_ARGS') | default('', true) }}"
        mariadb_root_password: "{{ lookup('env', 'MARIADB_ROOT_PASSWORD') | default(randompw.stdout, true) }}"
    
    - name: Template createdb
      template:
        src: /setup/createdb.sql.j2
        dest: /setup/createdb.sql
        
    - name: Template create root 
      template:
        src: /setup/create_root.sql.j2
        dest: /setup/create_root.sql
    
    - name: Template grant.sql
      template:
        src: /setup/grant.sql.j2
        dest: /setup/grant.sql
    
    - name: Init the database
      command: mysql_install_db --datadir=/var/lib/mysql
       
    - name: Start the server in the background
      shell: mysqld_safe --user=root {{ bootstrap_args }} & >/dev/null 2>&1 && echo $!
      register: mysql_pid 
 
    - name: Wait for the database to be ready
      wait_for: port=3306 timeout=30  
    
    - name: Execute create root
      shell: cat /setup/create_root.sql | mysql --protocol=socket -uroot
    
    - name: Execute createdb 
      shell: cat /setup/createdb.sql | mysql --protocol=socket -uroot -p"{{ mariadb_root_password }}"
    
    - name: Execute grants    
      shell: cat /setup/grant.sql | mysql --protocol=socket -uroot -p"{{ mariadb_root_password }}"
         
    - name: Remove SQL files
      file:
        path: "{{ item }}" 
        state: absent
      with_fileglob:
      - /setup/*.sql
    
    - name: Kill the background process
      shell: kill -s TERM {{ mysql_pid.stdout }}

    - name: Show the root password
      debug: msg="Set the root password to {{ mariadb_root_password }}"
      when: mariadb_root_password == randompw.stdout
    
